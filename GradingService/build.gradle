buildscript {
    buildscript {
        repositories {
            mavenCentral()
            //Needed only for SNAPSHOT versions
            //maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        }
        dependencies {
            classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.5.2'
        }
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'

    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'info.solidsoft.pitest' version '1.5.2'
}
group = 'nl.tudelft.sem10'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compile 'mysql:mysql-connector-java:5.1.+'

    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20090211'


    // Local test database (in-memory)
    implementation 'com.h2database:h2'
    developmentOnly 'org.hibernate:hibernate-core'
    developmentOnly 'org.hibernate:hibernate-entitymanager'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
    testImplementation('org.assertj:assertj-core:3.14.0')
}

test {
    useJUnitPlatform()
    jacoco {
        enabled = true
        includes = ['nl.tudelft.sem10.*']
    }
}


jacocoTestCoverageVerification() {
    dependsOn test
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['nl.tudelft.sem10.*']

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.1
            }
        }
    }
}

checkstyle {
    toolVersion "8.37"
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
    incrementalAnalysis = true
}

apply plugin: 'info.solidsoft.pitest'
pitest {
    //adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
    junit5PluginVersion = '0.12'

    targetClasses = ['nl.tudelft.sem10.*'] //by default "${project.group}.*"
    pitestVersion = '1.5.1' //not needed when a default PIT version should be used
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    skipFailingTests = true
}
